{"version":3,"sources":["services/blogs.js","reducers/blogs.js","components/Blog.js","components/Notification.js","components/Togglable.js","reducers/notification.js","components/AddBlog.js","services/login.js","reducers/clientLogin.js","components/Login.js","components/Footer.js","services/users.js","reducers/users.js","components/Users.js","components/User.js","components/IndividualBlogs.js","components/IndividualBlog.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","createBlog","blogObject","config","headers","Authorization","post","console","log","message","commentBlog","blog","comment","id","setToken","newToken","updateLikes","put","deleteBlog","delete","status","deleteBlogAction","dispatch","blogService","type","likeBlogAction","updatedLikeBlog","blogReducer","state","action","filter","map","Blog","props","useState","showFull","setShowFull","useDispatch","likeBlogButton","blogOf","deleteBlogButton","className","onClick","title","author","likes","url","Notification","useSelector","notification","show","Alert","Togglable","React","forwardRef","ref","visibility","setVisibility","toHide","display","toShow","handleVisibility","useImperativeHandle","style","name","children","displayName","timeOut","AddBlog","setTitle","setAuthor","setUrl","onSubmit","e","preventDefault","newBlog","value","onChange","target","required","userLogin","userObject","loginAction","userCredentials","loginService","user","clientReducer","noticeAction","clearTimeout","setTimeout","notificationReducer","Login","username","setUsername","password","setPassword","useEffect","client","window","localStorage","setItem","JSON","stringify","handleLogin","event","error","Button","removeItem","variant","color","Footer","initializeUsersAction","usersService","users","usersReducer","Users","blogs","key","to","length","User","match","useRouteMatch","find","params","toUpperCase","IndividualBlogs","IndividualBlog","setComment","href","commentBlogAction","comments","i","App","addBlogRef","useRef","userName","tokenJSON","getItem","parse","textDecoration","Container","AppBar","position","Toolbar","path","current","_","orderBy","reducer","combineReducers","blogsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6529d7c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/blogs\";\r\n\r\nlet token = null;\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  // console.log(response.data);\r\n  return response.data;\r\n};\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n  // console.log(token);\r\n};\r\n\r\nconst createBlog = async (blogObject) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(baseUrl, blogObject, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    return error.message;\r\n  }\r\n};\r\n\r\nconst commentBlog = async (blog, comment) => {\r\n  // no need for a token any one can comment on any blog\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/${blog.id}/comments`, {\r\n      comment,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst updateLikes = async (id, blogObject) => {\r\n  try {\r\n    const response = await axios.put(`${baseUrl}/${id}`, blogObject);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    return error.message;\r\n  }\r\n};\r\n\r\nconst deleteBlog = async (id) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config);\r\n    return response.status;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    return error.message;\r\n  }\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  setToken,\r\n  createBlog,\r\n  updateLikes,\r\n  deleteBlog,\r\n  commentBlog,\r\n};\r\n","import blogService from \"../services/blogs\";\r\n\r\nexport const initializeBlogsAction = () => {\r\n  return async (dispatch) => {\r\n    const blogs = await blogService.getAll();\r\n    // console.log(blogs);\r\n    dispatch({\r\n      type: \"GET_BlOGS\",\r\n      data: blogs,\r\n    });\r\n  };\r\n};\r\n\r\nexport const createBlogAction = (blog) => {\r\n  return async (dispatch) => {\r\n    const newBlog = await blogService.createBlog(blog);\r\n    // console.log(newBlog);\r\n    dispatch({\r\n      type: \"CREATE_BLOG\",\r\n      data: newBlog,\r\n    });\r\n  };\r\n};\r\n\r\nexport const commentBlogAction = (blog, comment) => {\r\n  return async (dispatch) => {\r\n    const newBlog = await blogService.commentBlog(blog, comment);\r\n    console.log(\"action\", newBlog);\r\n    dispatch({\r\n      type: \"UPDATE_COMMENTS\",\r\n      data: newBlog,\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteBlogAction = (id) => {\r\n  return async (dispatch) => {\r\n    const response = await blogService.deleteBlog(id);\r\n\r\n    if (response !== 204) return;\r\n    // response is the status recheck and input the correct status code.\r\n\r\n    dispatch({\r\n      type: \"DELETE_BLOG\",\r\n      data: id,\r\n    });\r\n  };\r\n};\r\n\r\nexport const likeBlogAction = (blog) => {\r\n  return async (dispatch) => {\r\n    const updatedLikeBlog = await blogService.updateLikes(blog.id, blog);\r\n    dispatch({\r\n      type: \"LIKE_BLOG\",\r\n      data: updatedLikeBlog,\r\n    });\r\n  };\r\n};\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"GET_BlOGS\":\r\n      return [...action.data];\r\n    case \"CREATE_BLOG\":\r\n      return [...state, action.data];\r\n    case \"DELETE_BLOG\":\r\n      return state.filter((blog) => blog.id !== action.data);\r\n    case \"LIKE_BLOG\":\r\n      return state.map((blog) =>\r\n        blog.id !== action.data.id ? blog : action.data\r\n      );\r\n    case \"UPDATE_COMMENTS\":\r\n      return state.map((blog) =>\r\n        blog.id !== action.data.id ? blog : action.data\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blogReducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { likeBlogAction, deleteBlogAction } from \"../reducers/blogs\";\r\n\r\nconst Blog = (props) => {\r\n  const [showFull, setShowFull] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleShowFullBlog = () => {\r\n    setShowFull(!showFull);\r\n  };\r\n\r\n  const likeBlogButton = async (blogOf) => {\r\n    dispatch(likeBlogAction(blogOf));\r\n  };\r\n\r\n  const deleteBlogButton = async (id) => {\r\n    dispatch(deleteBlogAction(id));\r\n  };\r\n\r\n  const blurb = () => {\r\n    return (\r\n      <div className=\"TestBlogBlurb\">\r\n        <p>\r\n          <em>Title:</em>\r\n          {props.blog.title}\r\n          <em> Author:</em> {props.blog.author}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const fullBlog = () => {\r\n    return (\r\n      <div className=\"TestBlogFullBlog\">\r\n        <p>\r\n          <em>Title: </em>\r\n          {props.blog.title}\r\n        </p>\r\n        <p>\r\n          <em>Author: </em> {props.blog.author}\r\n        </p>\r\n        <p>\r\n          Likes: {props.blog.likes}{\" \"}\r\n          <button\r\n            className=\"TestLikeButton\"\r\n            onClick={() => likeBlogButton(props.blog)}\r\n          >\r\n            Like\r\n          </button>\r\n        </p>\r\n        <p>URL: {props.blog.url}</p>\r\n        <button\r\n          onClick={() => {\r\n            deleteBlogButton(props.blog.id);\r\n          }}\r\n        >\r\n          delete blog (above)\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"showFullBlog\" onClick={handleShowFullBlog}>\r\n        View\r\n      </button>\r\n      {showFull ? fullBlog() : blurb()}\r\n    </>\r\n  );\r\n};\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Blog;\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Notification = (props) => {\r\n  // return props ? <Alert severity=\"info\">{props.message}</Alert> : null;\r\n  const state = useSelector((state) => state);\r\n\r\n  return state.notification.show ? (\r\n    <Alert>{state.notification.message}</Alert>\r\n  ) : null;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useImperativeHandle } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visibility, setVisibility] = useState(false);\r\n\r\n  const toHide = { display: visibility ? \"none\" : \"\" };\r\n  const toShow = { display: visibility ? \"\" : \"none\" };\r\n\r\n  const handleVisibility = () => {\r\n    setVisibility(!visibility);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return { handleVisibility };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={toHide}>\r\n        <button onClick={handleVisibility}>{props.name}</button>{\" \"}\r\n      </div>\r\n      <div style={toShow} className=\"TestTogglable\">\r\n        <button onClick={handleVisibility}>{props.name} (hide)</button>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nTogglable.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nTogglable.displayName = \"Togglable\";\r\n\r\nexport default Togglable;\r\n","let timeOut;\r\n//  only one notification at a time\r\nexport const noticeAction = (message) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: \"SET_NOTICE\",\r\n      data: message,\r\n    });\r\n\r\n    clearTimeout(timeOut);\r\n    timeOut = setTimeout(() => {\r\n      dispatch({\r\n        type: \"CLEAR\",\r\n      });\r\n    }, 2000);\r\n  };\r\n};\r\n// add a another property to the state for various function\r\nconst notificationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_NOTICE\":\r\n      return {\r\n        show: true,\r\n        message: action.data.message,\r\n      };\r\n    case \"CLEAR\":\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default notificationReducer;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createBlogAction } from \"../reducers/blogs\";\r\n\r\nconst AddBlog = ({ visibility }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add a Blog</h2>\r\n      <form\r\n        className=\"TestAddBlog\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          visibility();\r\n          dispatch(createBlogAction({ title, author, url }));\r\n          setTitle(\"\");\r\n          setAuthor(\"\");\r\n          setUrl(\"\");\r\n        }}\r\n      >\r\n        <p>\r\n          <label>Title: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            id=\"title\"\r\n          />\r\n        </p>\r\n        <p>\r\n          <label>Author: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={author}\r\n            onChange={(e) => setAuthor(e.target.value)}\r\n            id=\"author\"\r\n            required\r\n          />\r\n        </p>\r\n\r\n        <p>\r\n          <label>URL: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={url}\r\n            onChange={(e) => setUrl(e.target.value)}\r\n            id=\"url\"\r\n            required\r\n          />\r\n        </p>\r\n        <button type=\"submit\">Create</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddBlog.propTypes = {\r\n  visibility: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddBlog;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/login\";\r\n\r\nconst userLogin = async (userObject) => {\r\n  try {\r\n    const response = await axios.post(baseUrl, userObject);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  userLogin,\r\n};\r\n","import loginService from \"../services/login\";\r\nimport blogService from \"../services/blogs\";\r\n\r\nexport const loginAction = (userCredentials) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await loginService.userLogin(userCredentials);\r\n      // console.log(user);\r\n      user && blogService.setToken(user.token);\r\n      dispatch({\r\n        type: \"SET_USER\",\r\n        data: user,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeUserAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: \"REMOVE_USER\",\r\n    });\r\n  };\r\n};\r\n\r\nexport const setUserAction = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      data: user,\r\n    });\r\n  };\r\n};\r\n\r\nconst clientReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return { ...action.data };\r\n    case \"REMOVE_USER\":\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default clientReducer;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginAction, removeUserAction } from \"../reducers/clientLogin\";\r\nimport { noticeAction } from \"../reducers/notification\";\r\nimport blogService from \"../services/blogs\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    state.client.name &&\r\n      window.localStorage.setItem(\"loggedInUser\", JSON.stringify(state.client));\r\n  }, [state.client]);\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      dispatch(loginAction({ username, password }));\r\n      dispatch(noticeAction({ message: `${username} was logged in` }));\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem(\"loggedInUser\");\r\n    dispatch(removeUserAction());\r\n    blogService.setToken(null);\r\n  };\r\n\r\n  return state.client.name ? (\r\n    <div>\r\n      <p>\r\n        {state.client.name} is logged in.\r\n        <Button id=\"logoutButton\" onClick={handleLogout}>\r\n          logout\r\n        </Button>\r\n      </p>\r\n    </div>\r\n  ) : (\r\n    <form onSubmit={(e) => handleLogin(e, username, password)}>\r\n      <h2>Login</h2>\r\n      <p>\r\n        <label>username: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          id=\"loginUsername\"\r\n        />\r\n      </p>\r\n      <p>\r\n        <label>password: </label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          id=\"loginPassword\"\r\n        />\r\n      </p>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        id=\"loginButton\"\r\n        type=\"submit\"\r\n      >\r\n        login\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <center>\r\n      <br />\r\n      <p>\r\n        <strong>\r\n          <em>University of Helsinki, FULLSTACK OPEN - 2020</em>\r\n        </strong>\r\n      </p>\r\n    </center>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/users\";\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll };\r\n","import usersService from \"../services/users\";\r\n\r\nexport const initializeUsersAction = () => {\r\n  return async (dispatch) => {\r\n    const users = await usersService.getAll();\r\n    // console.log(users);\r\n    dispatch({\r\n      type: \"GET_ALL\",\r\n      data: users,\r\n    });\r\n  };\r\n};\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"GET_ALL\":\r\n      return [...action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { initializeUsersAction } from \"../reducers/users\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Users = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    // dispatch(initializeBlogsAction());\r\n    dispatch(initializeUsersAction());\r\n  }, [state.blogs, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Users</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>name</th>\r\n            <th>Blogs</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.users.map((user) => {\r\n            return (\r\n              <tr key={user.id}>\r\n                <th>\r\n                  <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n                </th>\r\n                <th>{user.blogs.length}</th>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst User = () => {\r\n  const state = useSelector((state) => state);\r\n  const match = useRouteMatch(\"/users/:id\");\r\n  const user = match\r\n    ? state.users.find((user) => user.id === match.params.id)\r\n    : null;\r\n\r\n  return user ? (\r\n    <div>\r\n      <h3>{user.name.toUpperCase()}</h3>\r\n      <h3>Blogs</h3>\r\n      <ul>\r\n        {user.blogs.map((blog) => {\r\n          return <li key={blog.id}>{blog.title}</li>;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst IndividualBlogs = () => {\r\n  const state = useSelector((state) => state);\r\n  return (\r\n    <div>\r\n      <h2>Blogs</h2>\r\n      <hr />\r\n      {state.blogs.map((blog) => {\r\n        return (\r\n          <div key={blog.id}>\r\n            <h4>\r\n              <Link to={`/blogs/${blog.id}`}>\r\n                {blog.title} BY {blog.author}\r\n              </Link>\r\n            </h4>\r\n            <p>uploaded by {blog.user.name}</p>\r\n            <hr />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualBlogs;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { likeBlogAction, commentBlogAction } from \"../reducers/blogs\";\r\n\r\nconst IndividualBlog = () => {\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const match = useRouteMatch(\"/blogs/:id\");\r\n  const blog = match\r\n    ? state.blogs.find((blog) => blog.id === match.params.id)\r\n    : null;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(comment);\r\n    dispatch(commentBlogAction(blog, comment));\r\n    setComment(\"\");\r\n  };\r\n\r\n  return blog ? (\r\n    <div>\r\n      <h2>\r\n        {blog.title} by {blog.author}\r\n      </h2>\r\n      URL: <a href={blog.url}>{blog.url}</a>\r\n      <p>\r\n        {blog.likes} Likes{\" \"}\r\n        <button onClick={() => dispatch(likeBlogAction(blog))}>Like</button>\r\n      </p>\r\n      <p>added by: {blog.user.name}</p>\r\n      <h4>Comments</h4>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={comment}\r\n          onChange={(e) => {\r\n            setComment(e.target.value);\r\n          }}\r\n        />\r\n        <button type=\"submit\">Add comment</button>\r\n      </form>\r\n      <ul>\r\n        {blog.comments.map((comment, i) => {\r\n          return <li key={i}>{comment}</li>;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default IndividualBlog;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Switch, Link, Route } from \"react-router-dom\";\r\n\r\nimport {\r\n  Container,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport Blog from \"./components/Blog\";\r\nimport Notification from \"./components/Notification\";\r\nimport Togglable from \"./components/Togglable\";\r\nimport AddBlog from \"./components/AddBlog\";\r\nimport Login from \"./components/Login\";\r\nimport Footer from \"./components/Footer\";\r\nimport Users from \"./components/Users\";\r\nimport User from \"./components/User\";\r\nimport IndividualBlogs from \"./components/IndividualBlogs\";\r\nimport IndividualBlog from \"./components/IndividualBlog\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { initializeBlogsAction } from \"./reducers/blogs\";\r\nimport { initializeUsersAction } from \"./reducers/users\";\r\n\r\nimport { setUserAction } from \"./reducers/clientLogin\";\r\n\r\nconst App = () => {\r\n  //  Todo:: The notification component is currently inactive. We need to link the notifiction component ot the state for the message and use action to alter the state of the notification etc\r\n  const dispatch = useDispatch();\r\n  const addBlogRef = useRef();\r\n\r\n  const state = useSelector((state) => state);\r\n  const userName = state.client.name;\r\n\r\n  // Description:: Download the blogs\r\n  useEffect(() => {\r\n    dispatch(initializeBlogsAction());\r\n    dispatch(initializeUsersAction());\r\n  }, [dispatch]);\r\n\r\n  // Description:: login check\r\n  useEffect(() => {\r\n    const tokenJSON = window.localStorage.getItem(\"loggedInUser\");\r\n\r\n    if (tokenJSON) {\r\n      const client = JSON.parse(tokenJSON);\r\n      dispatch(setUserAction(client));\r\n    } else {\r\n      console.log(\"useEffect: empty local storage\");\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const toggleCreateBlogVisibility = () => {\r\n    addBlogRef.current.handleVisibility();\r\n  };\r\n\r\n  const style = {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" /> */}\r\n\r\n          <Button variant=\"outlined\" color=\"primary\">\r\n            <Link style={style} to=\"/\">\r\n              <p style={style}>Home</p>\r\n            </Link>\r\n          </Button>\r\n          <Button color=\"primary\">\r\n            <Link style={style} to=\"/users\">\r\n              <p style={style}>Users</p>\r\n            </Link>\r\n          </Button>\r\n          <Button color=\"primary\">\r\n            <Link style={style} to=\"/blogs\">\r\n              <p style={style}>Blogs</p>\r\n            </Link>\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Notification />\r\n      <br />\r\n      <Login />\r\n\r\n      <Switch>\r\n        <Route path=\"/users/:id\">\r\n          <User />\r\n        </Route>\r\n        <Route path=\"/users\">\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/blogs/:id\">\r\n          <IndividualBlog />\r\n        </Route>\r\n        <Route path=\"/blogs\">\r\n          <IndividualBlogs />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          {userName && (\r\n            <Togglable name={\"Add New Blog\"} ref={addBlogRef}>\r\n              <AddBlog visibility={toggleCreateBlogVisibility} />\r\n            </Togglable>\r\n          )}\r\n          <h2>Blogs</h2>\r\n          {_.orderBy(state.blogs, [\"likes\"], [\"desc\"]).map((blog) => (\r\n            <Blog key={blog.id} blog={blog} />\r\n          ))}\r\n        </Route>\r\n      </Switch>\r\n\r\n      <Footer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport blogsReducer from \"./reducers/blogs\";\r\nimport clientReducer from \"./reducers/clientLogin\";\r\nimport usersReducer from \"./reducers/users\";\r\nimport notificationReducer from \"./reducers/notification\";\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogsReducer,\r\n  client: clientReducer,\r\n  users: usersReducer,\r\n  notification: notificationReducer,\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}